from django.conf import settings

class HostEditor:
    """
    Host File Editor Utility

    Usage
    ```python
    host_editor = HostEditor()
    host_editor.clear() # if you want to clear hujan host entries
    host_editor.add(address="127.0.0.1", names=["my.local", "local.host"]) # Add host entry
    host_editor.save() # Save the host file
    ```
    """

    file_name = settings.CONFIG_DIR_HOST
    default_lines = []
    start_block_msg = "# GENERATED BY HUJAN DO NOT EDIT\n"
    end_block_msg = "# END OF HUJAN GENERATED ENTRY\n"
    host_entries = []

    def __init__(self):
        self._read_content()

    def _read_content(self):
        with open(self.file_name, 'r') as f:
            lines = f.readlines()

        default_lines, hujan_lines = self._separate_hujan_block(lines)

        self.default_lines = default_lines
        self.host_entries = self._parse_host_entries(hujan_lines)

    def _separate_hujan_block(self, lines) -> tuple:
        default_lines = []
        hujan_lines = []
        in_block = False
        for l in lines:
            if l == self.start_block_msg:
                in_block = True
            elif l == self.end_block_msg:
                in_block = False
            elif in_block:
                hujan_lines.append(l)
            else:
                default_lines.append(l)

        return default_lines, hujan_lines

    def _parse_host_entries(self, hujan_lines) -> list:
        host_entries = map(lambda x: x.rstrip("\n").split(" "), hujan_lines)
        return list(host_entries)

    def clear(self):
        self.host_entries.clear()

    def add(self, address: str, names: list):
        self.host_entries.append([address] + names)

    def save(self):
        with open(self.file_name, 'w') as f:
            f.writelines(self.default_lines)

            # Write hujan host config
            f.write(self.start_block_msg)

            for l in self.host_entries:
                f.write("%s\n" % " ".join(l))
            f.write(self.end_block_msg)
    
    def truncate(self):
        """
        docstring
        """
        pass

    @staticmethod
    def save_from_model(servers):
        editor = HostEditor()
        editor.clear()
        for s in servers:
            editor.add(address=s.ip_address, names=[s.name])

        editor.save()
